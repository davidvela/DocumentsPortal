<mvc:View xmlns="sap.m" xmlns:mvc="sap.ui.core.mvc" xmlns:core="sap.ui.core" xmlns:semantic="sap.m.semantic"
	xmlns:footerbar="sap.ushell.ui.footerbar" xmlns:l="sap.ui.layout" xmlns:u="sap.ui.unified" 
	controllerName="portaltest.controller.fragments_views.upCollections"	height="500px">
		
		<UploadCollection id="UploadCollection" maximumFilenameLength="55" maximumFileSize="10" multiple="false" showSeparators="All"
		change="onChange" fileSizeExceed="onFileSizeExceed" selectionChange="onSelectionChange" typeMissmatch="onTypeMissmatch"
		uploadComplete="onUploadComplete" beforeUploadStarts="onBeforeUploadStarts" uploadTerminated="onUploadTerminated"
		items="{path : 'dcs>/items', templateShareable : 'true'}" mode="MultiSelect">
		<toolbar>
			<OverflowToolbar id="myId">
				<Title id="attachmentTitle"/> 
				<ToolbarSpacer/>
				<Button id="downloadButton" text="Download" 			press="onDownloadItem"	enabled="false" type="Transparent"></Button>
				<Button id="versionButton"  text="Upload a new version" press="onVersion"		enabled="false" type="Transparent"></Button>
				<UploadCollectionToolbarPlaceholder></UploadCollectionToolbarPlaceholder>
			</OverflowToolbar>
		</toolbar>
		<items>
			<UploadCollectionItem documentId="{dcs>documentId}" fileName="{dcs>fileName}" mimeType="{dcs>mimeType}" thumbnailUrl="{dcs>thumbnailUrl}" url="{dcs>url}"
				enableEdit="false" enableDelete="false" visibleDelete="false" visibleEdit="false"
				attributes="{path : 'dcs>attributes', templateShareable : 'true'}" 
				statuses="{path : 'dcs>statuses', templateShareable : 'true'}"
				selected="{dcs>selected}">
				<attributes>
					<ObjectAttribute title="{dcs>title}" text="{parts : ['dcs>text', 'type'], formatter : '.formatAttribute'}" active="{dcs>active}"/>
				</attributes>
				<statuses>
					<ObjectStatus title="{dcs>title}" text="{dcs>text}" state="{dcs>state}" icon="{dcs>icon}" iconDensityAware="{dcs>iconDensityAware}"
						textDirection="{dcs>textDirection}"/>
				</statuses>
			</UploadCollectionItem>
		</items>
	</UploadCollection>
	
	
	<Button text="view XML" press="onPressTest2"></Button>
	<ActionSelect	id="select"	class="sapUiSmallMarginBottom"
				items="{
					path: 'screens>/elements',
					sorter: { path: 'Name' }
				}">
				<items>
					<core:Item key="{screens>Id}" text="{screens>Name}" />
				</items>
	</ActionSelect>				
	<MultiInput id="multiInput" valueHelpRequest="onValueHelpRequest" width = "100px" value="HeaderF4"/> 		
            
	
		<Page 
		showHeader="false"
		showNavButton="false">
		<content>
			<Page
				id="sideContentContainer"
				showHeader="false"
				showNavButton="false">
				<l:DynamicSideContent
					id="DynamicSideContent"
					class="sapUiDSCExplored sapUiContentPadding"
					sideContentFallDown="BelowM"
					sideContentPosition="Begin"
					containerQuery="true"
					breakpointChanged="updateToggleButtonState">
					<l:mainContent>
						<Title level="H1" text="Main content positioned after side content" />
						<Text text="Lorem ipsum dolor sit amet, conseco consequat.
					
						Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
						Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
						Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
						."></Text>
					</l:mainContent>
					<l:sideContent>
						<Title level="H1" text="Side content positioned before main content" />
						<Text text="Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut.
						Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
						Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
						Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
						"></Text>
					</l:sideContent>
				</l:DynamicSideContent>
			</Page>
		</content>
		<footer>
			<Toolbar>
				<content>
					<Button text="Toggle" type="Accept" press="handleToggleClick" id="toggleButton"></Button>
					<Slider id='DSCWidthSlider' value="100" liveChange="handleSliderChange" />
					<Text id='DSCWidthHintText' text="Best view in full screen mode" visible="getVisible()"></Text>
				</content>
			</Toolbar>
		</footer>
	</Page>




</mvc:View>